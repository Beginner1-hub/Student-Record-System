import sqlite3

# ---------- DATABASE SETUP ----------
def create_connection():
    return sqlite3.connect('students.db')

def initialize_database():
    conn = create_connection()
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS students (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            age INTEGER NOT NULL,
            grade TEXT NOT NULL
        )
    ''')
    conn.commit()
    conn.close()

# ---------- CRUD FUNCTIONS ----------
def create_student(name, age, grade):
    conn = create_connection()
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO students (name, age, grade)
        VALUES (?, ?, ?)
    ''', (name, age, grade))
    conn.commit()
    conn.close()

def read_students():
    conn = create_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM students")
    students = cursor.fetchall()
    conn.close()
    return students

def read_student_by_id(student_id):
    conn = create_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM students WHERE id = ?", (student_id,))
    student = cursor.fetchone()
    conn.close()
    return student

def update_student(student_id, name=None, age=None, grade=None):
    conn = create_connection()
    cursor = conn.cursor()
    if name:
        cursor.execute("UPDATE students SET name = ? WHERE id = ?", (name, student_id))
    if age:
        cursor.execute("UPDATE students SET age = ? WHERE id = ?", (age, student_id))
    if grade:
        cursor.execute("UPDATE students SET grade = ? WHERE id = ?", (grade, student_id))
    conn.commit()
    conn.close()

def delete_student(student_id):
    conn = create_connection()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM students WHERE id = ?", (student_id,))
    conn.commit()
    conn.close()

# ---------- EXAMPLE USAGE ----------
if __name__ == "__main__":
    initialize_database()
    
    # Add sample data
    create_student("Alice", 14, "8th")
    create_student("Bob", 15, "9th")

    # Read all students
    print("All Students:", read_students())

    # Update Bob's grade
    update_student(2, grade="10th")

    # Delete Alice
    delete_student(1)

    # Final state
    print("Final Students:", read_students())
